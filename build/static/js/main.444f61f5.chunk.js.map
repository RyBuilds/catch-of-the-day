{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/StorePicker.js","components/NotFound.js","components/Router.js","index.js"],"names":["Header","props","className","tagline","formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","this","total","reduce","prevTotal","map","React","Component","AddFishForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createFish","event","preventDefault","current","value","parseFloat","desc","image","addFish","currentTarget","reset","onSubmit","ref","type","placeholder","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","StorePicker","myInput","goToStore","bind","storeName","history","push","action","required","defaultValue","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.444f61f5.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = (props) => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\n// class Header extends React.Component {\n//   render() {\n//     return (\n//       <header className=\"top\">\n//         <h1>\n//           Catch\n//           <span className=\"ofThe\">\n//             <span className=\"of\">Of</span>\n//             <span className=\"the\">The</span>\n//           </span>\n//           Day\n//         </h1>\n//         <h3 className=\"tagline\">\n//           <span>{this.props.tagline}</span>\n//         </h3>\n//       </header>\n//     );\n//   }\n// }\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  };\n\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key: key,\n      timeout: { enter: 500, exit: 500 },\n    };\n    // MAKE SURE THE FISH IS LOADED BEFORE WE CONTINUE\n    if (!fish) return;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : fish} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func,\n  };\n\n  createFish = (event) => {\n    // STOP FORM FROM SUBMITTING\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    };\n    this.props.addFish(fish);\n    // REFRESH THE FORM\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Description\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n  };\n  handleChange = (event) => {\n    console.log(event.currentTarget);\n    // UPDATE THAT FISH\n    // 1. MAKE A COPY OF THE CURRENT FISH\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value,\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = (props) => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your stores inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n      Log in with GitHub\n    </button>\n    <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\n      Log in with Twitter\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\n      Log in with Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyDzfPvcTibBNW3UbbvSSyVnOFEDH7zPUnQ\",\n  authDomain: \"catch-of-the-day-rybuilds.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-rybuilds-default-rtdb.firebaseio.com\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// THIS IS A NAMED EXPORT\nexport { firebaseApp };\n\n// THIS IS A DEFAULT EXPORT\nexport default base;\n","import React from \"react\";\nimport firebase from \"firebase\";\nimport PropTypes from \"prop-types\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    addFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n  };\n\n  state = {\n    uid: null,\n    owner: null,\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async (authData) => {\n    // 1. LOOK UP THE CURRENT STORE IN THE FIREBASE DATABASE\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    // 2. CLAIM IT IF THERE IS NO OWNER\n    if (!store.owner) {\n      // SAVE IS AS OUR STORE\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid,\n      });\n    }\n    // 3. SET THE STATE OF THE INVENTORY COMPONENT TO REFLECT THE CURRENT USER\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n    });\n    console.log(authData);\n  };\n\n  authenticate = (provider) => {\n    // CREATE AN AUTH PROVIDER BASED ON WHAT THEY WANT TO SIGN IN WITH\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    // ONCE SOMEONE COMES BACK FROM THIS POP UP => .THEN\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n  };\n\n  logout = async () => {\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n\n    // CHECK IF THEY ARE LOGGED IN\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    // CHECK IF THEY ARE THE OWNER OF THE STORE\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the store owner!</p>\n          {logout}\n        </div>\n      );\n    }\n    // NO OBJECTIONS - THEY MUST BE THE OWNER\n    return (\n      <div className=\"inventory\">\n        <h2>INVENTORY</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map((key) => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    addToOrder: PropTypes.func,\n  };\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        {/* <button disabled={!isAvailable} onClick={this.handleClick}> */}\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? \"Add to Card\" : \"Sold Out\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport { object } from \"prop-types\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  static propTypes = {\n    match: PropTypes.object,\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // FIRST REINSTATE LOCAL STORAGE\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\",\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = (fish) => {\n    // 1. TAKE A COPY OF THE EXISTING STATE\n    const fishes = { ...this.state.fishes };\n    // 2. ADD OUR NEW FISH TO THAT FISHES VARIABLE\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. SET THE NEW FISHES OBJECT TO STATE\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. TAKE A COPY OF EXISTING STATE\n    const fishes = { ...this.state.fishes };\n    // 2. UPDATE THAT STATE\n    fishes[key] = updatedFish;\n    // 3. SET THAT TO STATE\n    this.setState({ fishes });\n  };\n\n  deleteFish = (key) => {\n    // 1. TAKE A COPY OF THE EXISTING STATE\n    const fishes = { ...this.state.fishes };\n    // 2. UPDATE THE STATE\n    fishes[key] = null;\n    // 3. UPDATE THE STATE\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = (key) => {\n    // 1. TAKE A COPY OF THE EXISTING STATE\n    const order = { ...this.state.order };\n    // 2. EITHER ADD TO THE ORDER OR UPDATE QUANTITY\n    order[key] = order[key] + 1 || 1;\n    // 3. CALL SETSTATE TO UPDATE OUR STATE OBJECT\n    this.setState({ order });\n  };\n\n  removeFromOrder = (key) => {\n    // 1. TAKE A COPY OF THE EXISTING STATE\n    const order = { ...this.state.order };\n    // 2. REMOVE THAT ITEM FROM ORDER\n    delete order[key];\n    // 3. CALL SETSTATE TO UPDATE OUR STATE OBJECT\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map((key) => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  static propTypes = {\n    history: PropTypes.object,\n  };\n  // ES6 BINDING THIS KEYWORD\n  constructor() {\n    super();\n    this.goToStore = this.goToStore.bind(this);\n  }\n\n  myInput = React.createRef();\n\n  goToStore(event) {\n    // STOP THE FORM FROM SUBMITTING\n    event.preventDefault();\n    // GET THE TEXT FROM THAT INPUT\n    const storeName = this.myInput.current.value;\n    // CHANGE THE PAGE TO /STORE/WHATEVER-THEY-ENTERED\n    this.props.history.push(`/store/${storeName}`);\n  }\n\n  render() {\n    return (\n      <form action=\"\" className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter a Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>ERROR 404</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport App from \"./App\";\nimport StorePicker from \"./StorePicker\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}